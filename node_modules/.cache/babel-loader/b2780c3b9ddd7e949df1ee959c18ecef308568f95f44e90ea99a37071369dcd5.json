{"ast":null,"code":"var _jsxFileName = \"C:\\\\code\\\\react js\\\\chapter 1\\\\01-starting-project (8)\\\\01-starting-project\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport Notification from \"./components/UI/Notification\";\nimport { useEffect } from \"react\";\nimport { uiAction } from \"./store/ui-slice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet isInitial = true;\nfunction App() {\n  _s();\n  const dispatch = useDispatch();\n  const showCart = useSelector(state => state.ui.cartIsVisible);\n  const cart = useSelector(state => state.cart);\n  const notification = useSelector(state => state.ui.notification);\n  useEffect(() => {\n    async function sendCartData() {\n      dispatch(uiAction.showNotification({\n        status: \"Pending\",\n        title: \"Sending...\",\n        message: \"Sending cart Data!\"\n      }));\n      const response = await fetch(\"https://green-plasma-394713-default-rtdb.firebaseio.com/cart.json\", {\n        method: \"PUT\",\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      dispatch(uiAction.showNotification({\n        status: \"success\",\n        title: \"Success!\",\n        message: \"Sent cart Data successfully!\"\n      }));\n      const responseData = await response.json();\n      console.log(\"Sent data to the server!\");\n      console.log(responseData);\n    }\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n    sendCartData().catch(error => {\n      dispatch(uiAction.showNotification({\n        status: \"error\",\n        title: \"Error\",\n        message: \"Error sending cart data!\"\n      }));\n    });\n  }, [cart, dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [notification && /*#__PURE__*/_jsxDEV(Notification, {\n      status: notification.status,\n      title: notification.title,\n      message: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [showCart && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"ym533N9pcV2ZQROugfAj7yssIY8=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useDispatch","useSelector","Cart","Layout","Products","Notification","useEffect","uiAction","jsxDEV","_jsxDEV","Fragment","_Fragment","isInitial","App","_s","dispatch","showCart","state","ui","cartIsVisible","cart","notification","sendCartData","showNotification","status","title","message","response","fetch","method","body","JSON","stringify","ok","Error","responseData","json","console","log","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/code/react js/chapter 1/01-starting-project (8)/01-starting-project/src/App.jsx"],"sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport Notification from \"./components/UI/Notification\";\nimport { useEffect } from \"react\";\nimport { uiAction } from \"./store/ui-slice\";\n\nlet isInitial = true;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const showCart = useSelector((state) => state.ui.cartIsVisible);\n  const cart = useSelector((state) => state.cart);\n  const notification = useSelector((state) => state.ui.notification);\n\n  useEffect(() => {\n    async function sendCartData() {\n      dispatch(\n        uiAction.showNotification({\n          status: \"Pending\",\n          title: \"Sending...\",\n          message: \"Sending cart Data!\",\n        })\n      );\n      const response = await fetch(\n        \"https://green-plasma-394713-default-rtdb.firebaseio.com/cart.json\",\n        {\n          method: \"PUT\",\n          body: JSON.stringify(cart),\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      dispatch(\n        uiAction.showNotification({\n          status: \"success\",\n          title: \"Success!\",\n          message: \"Sent cart Data successfully!\",\n        })\n      );\n\n      \n      const responseData = await response.json();\n      console.log(\"Sent data to the server!\");\n      console.log(responseData);\n    }\n    \n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n    sendCartData().catch((error) => {\n      dispatch(\n        uiAction.showNotification({\n          status: \"error\",\n          title: \"Error\",\n          message: \"Error sending cart data!\",\n        })\n      );\n    });\n  }, [cart, dispatch]);\n\n  return (\n    <>\n      {notification && (\n        <Notification\n          status={notification.status}\n          title={notification.title}\n          message={notification.message}\n        />\n      )}\n      <Layout>\n        {showCart && <Cart />}\n        <Products />\n      </Layout>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}